#include "BigInteger.h"#include <random>#include <fstream>vector<unsigned long int> createRandomNumber();void resetFile();int main() {    resetFile();    BigInteger a = BigInteger(createRandomNumber());    a.printNumber();    a.writeFile();    BigInteger b = BigInteger(createRandomNumber());    b.printNumber();    b.writeFile();    BigInteger c = BigInteger(createRandomNumber());    c.printNumber();    c.writeFile();    BigInteger d = a.modularSubstraction(b, c);    d.printNumber();    d.writeFile();}vector<unsigned long int> createRandomNumber() {    vector<unsigned long int> output;    std::random_device rd;    std::mt19937 generator(rd());    std::uniform_int_distribution<unsigned long int> distribution(0, 0xFFFFFFFF);    output.reserve(8);    for (int i = 0; i < 8; ++i) {        output.push_back(distribution(generator));    }    return output;}void resetFile() {    string const file("../data.txt");    ofstream flux(file.c_str());}